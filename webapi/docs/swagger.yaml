definitions:
  models.AddCharacter:
    type: object
  models.AddUser:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  models.Character:
    properties:
      ability:
        type: string
      damage:
        type: number
      maxHealth:
        type: number
      name:
        type: string
    type: object
  models.Login:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.UpdateCharacter:
    type: object
  models.User:
    properties:
      characters:
        items:
          $ref: '#/definitions/models.Character'
        type: array
      name:
        type: string
    type: object
info:
  contact: {}
  title: Application Api
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: healthy
          schema:
            type: string
      summary: Health check
      tags:
      - General
  /character:
    get:
      consumes:
      - application/json
      parameters:
      - description: character id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: get character with id
      tags:
      - Character
  /character/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: character
        in: body
        name: character
        required: true
        schema:
          $ref: '#/definitions/models.AddCharacter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: register user
      tags:
      - Character
  /character/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: character id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: register user
      tags:
      - Character
  /character/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: character
        in: body
        name: character
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCharacter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: register user
      tags:
      - Character
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: logged in user
          schema:
            $ref: '#/definitions/models.User'
      summary: Login user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AddUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: get all user characters
      tags:
      - Character
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
